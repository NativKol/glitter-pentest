def get_id(sock, username):
    """
    function that gives you the id of the account by the username
    :param sock: socket
    :param username: the username you entered
    :return: the user id
    :rtype: str
    """
    user_id = ""
    # WILDCARD means that i can search private accounts
    request = '300#{gli&&er}{"search_type":"WILDCARD","search_entry":"' + username + '"}##'
    recv = send(request, sock)
    user_id = extract_id(recv)
    return user_id

def get_username(sock, user_id):
    """
    function that gives you the username by the user_id
    :param sock: socket
    :param user_id: the user_id you entered
    :return: the username
    :rtype: str
    """
    username = ""
    # ID means that i can search accounts by user id
    request = '300#{gli&&er}{"search_type":"ID","search_entry":"' + str(user_id) + '"}##'
    recv = send(request, sock)
    username = extract_username(recv)
    return username

def extract_username(msg):
    """ function that extract only the username from the answer """
    if msg[0] == '9':       # 954#Limit-rate reached{gli&&er}##
        return "error"
    msg = msg.split('screen_name":"')
    msg = msg[1]
    msg = msg.split('"')
    msg = msg[0]
    return msg


def extract_id(msg):
    """ function that extract only the id from the answer """
    msg = msg.split(":")
    msg = msg[5]
    msg = msg.split(",")
    msg = msg[0]
    return msg

def send(send_msg, sock):
    """
    function that sends the request and return the answer
    :param send_msg: the request
    :param sock: socket
    :return: the answer
    :rtype: str
    """
    send_msg = send_msg.encode()
    sock.send(send_msg)
    msg = sock.recv(1024)
    msg = msg.decode()
    return msg
