def login(sock):
    """
    function that login into glitter
    :param sock: the sock that opened
    :return: none
    """
    # INPUT
    USERNAME = str(input("Please enter username: "))
    PASSWORD = str(input("Please enter password: "))

    print("Logging in...")
    # the login request
    send_msg = '100#{gli&&er}{"user_name":"' + USERNAME + '","password":"' + PASSWORD + '","enable_push_notifications":true}##'
    send_msg = send_msg.encode()
    sock.send(send_msg)
    msg = sock.recv(1024)
    msg = msg.decode()
    send_msg = send_msg.decode()
    checksum = calcChecksum(send_msg)
    send_msg = '110#{gli&&er}' + str(checksum) + '##'   # build the checksum(ascii) request
    send_msg = send_msg.encode()
    sock.send(send_msg)
    msg = sock.recv(1024)
    msg = msg.decode()
    checksum = calcID(msg)
    send_msg = '310#{gli&&er}' + str(checksum) + '##'   # build the checksum(id) request
    send_msg = send_msg.encode()
    sock.send(send_msg)
    msg = sock.recv(1024)
    msg = msg.decode()
    return str(checksum)


def calcChecksum(msg):
    """
    function that calc the checksum by extract the username and password and adding the ascii values together
    :param msg: the msg that i sent
    :return: the checksum
    :rtype: int
    """
    # initialize
    count = 0
    checksum = ""
    username = ""
    password = ""
    # extract only the username and password for the checksum
    msg = msg.split("{")
    msg = msg[2]
    msg = msg.split(":")
    username = msg[1]
    password = msg[2]
    username = username.split('"')
    password = password.split('"')
    username = username[1]
    password = password[1]
    checksum = username + password
    # calc the checksum by adding every ascii value together
    for letter in range(len(checksum)):
        count += ord(checksum[letter])

    return count

def calcID(msg):
    """
    function that extract the id from the msg received
    :param msg: the msg that received
    :return: the id
    :rtype: int
    """
    msg = msg.split("{")
    msg = msg[2]
    msg = msg.split(":")
    msg = msg[5]
    msg = msg.split(",")
    return msg[0]
